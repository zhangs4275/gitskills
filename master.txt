
	@Autowired
	private AppInfoBizDao appInfoBizDao;
	@Autowired
	private VendorConsumerService vendorConsumerService;

	@Override
	public AppInfoEntity getAppInfo(String appId) { 
		AppInfoEntityExample example = new AppInfoEntityExample();
		example.createCriteria().andAppIdEqualTo(appId);
		List<AppInfoEntity> appInfoEntities = appInfoEntityMapper.selectByExample(example);
		
		return appInfoEntities.get(0);

	public List<AppInfoBizEntity> queryAppInfoList(AppInfoListRequest queryInfo) {
		
		ApiInfoReadRequest apiInfoReadRequest = new ApiInfoReadRequest();
		apiInfoReadRequest.setWid("10027");
//		apiInfoReadRequest.setApiName("ИљОн");
		apiInfoReadRequest.setApiType("2");
		apiInfoConsumerService.getApiInfoList(apiInfoReadRequest);
		
		
		
		Map<String,Object> paramMap = new HashMap<String,Object>();
		
		paramMap.put("appName", queryInfo.getAppName());
		paramMap.put("appType", queryInfo.getAppType());
		paramMap.put("appOpenWay", queryInfo.getAppOpenWay());
		paramMap.put("appAuditStatus", queryInfo.getAppAuditStatus());
		logger.info("queryAppInfo paramMap:{}",JSONObject.toJSONString(paramMap));
		List<AppInfoBizEntity> list = appInfoBizDao.queryAppInfoList(paramMap);
		return list;
	}
